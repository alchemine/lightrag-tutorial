{
  "chunk-cafdfbe69a88ca01d85f442228a39254": {
    "tokens": 1200,
    "content": "LIGHT RAG: S IMPLE AND FAST\nRETRIEVAL -AUGMENTED GENERATION\nZirui Guo1,2, Lianghao Xia2, Yanhua Yu1, Tu Ao1, Chao Huang2∗\nBeijing University of Posts and Telecommunications1\nUniversity of Hong Kong2\nzrguo101@hku.hk aka_xia@foxmail.com chaohuang75@gmail.com\nABSTRACT\nRetrieval-Augmented Generation (RAG) systems enhance large language models\n(LLMs) by integrating external knowledge sources, enabling more accurate and\ncontextually relevant responses tailored to user needs. However, existing RAG\nsystems have significant limitations, including reliance on flat data representa-\ntions and inadequate contextual awareness, which can lead to fragmented answers\nthat fail to capture complex inter-dependencies. To address these challenges, we\npropose LightRAG, which incorporates graph structures into text indexing and\nretrieval processes. This innovative framework employs a dual-level retrieval sys-\ntem that enhances comprehensive information retrieval from both low-level and\nhigh-level knowledge discovery. Additionally, the integration of graph structures\nwith vector representations facilitates efficient retrieval of related entities and their\nrelationships, significantly improving response times while maintaining contextual\nrelevance. This capability is further enhanced by an incremental update algorithm\nthat ensures the timely integration of new data, allowing the system to remain\neffective and responsive in rapidly changing data environments. Extensive experi-\nmental validation demonstrates considerable improvements in retrieval accuracy\nand efficiency compared to existing approaches. We have made our LightRAG\nopen-source and available at the link: https://github.com/HKUDS/LightRAG.\n1 I NTRODUCTION\nRetrieval-Augmented Generation (RAG) systems have been developed to enhance large language\nmodels (LLMs) by integrating external knowledge sources Sudhi et al. (2024); Es et al. (2024);\nSalemi & Zamani (2024). This innovative integration allows LLMs to generate more accurate and\ncontextually relevant responses, significantly improving their utility in real-world applications. By\nadapting to specific domain knowledge Tu et al. (2024), RAG systems ensure that the information\nprovided is not only pertinent but also tailored to the user’s needs. Furthermore, they offer access to\nup-to-date information Zhao et al. (2024), which is crucial in rapidly evolving fields. Chunking plays\na vital role in facilitating the retrieval-augmented generation process Lyu et al. (2024). By breaking\ndown a large external text corpus into smaller, more manageable segments, chunking significantly\nenhances the accuracy of information retrieval. This approach allows for more targeted similarity\nsearches, ensuring that the retrieved content is directly relevant to user queries.\nHowever, existing RAG systems have key limitations that hinder their performance. First, many\nmethods rely on flat data representations, restricting their ability to understand and retrieve information\nbased on intricate relationships between entities. Second, these systems often lack the contextual\nawareness needed to maintain coherence across various entities and their interrelations, resulting\nin responses that may not fully address user queries. For example, consider a user asking, “How\ndoes the rise of electric vehicles influence urban air quality and public transportation infrastructure?”\nExisting RAG methods might retrieve separate documents on electric vehicles, air pollution, and\npublic transportation challenges but struggle to synthesize this information into a cohesive response.\nThey may fail to explain how the adoption of electric vehicles can improve air quality, which in turn\n∗Chao Huang is the corresponding author.\n1\narXiv:2410.05779v2  [cs.IR]  7 Nov 2024\ncould affect public transportation planning. As a result, the user may receive a fragmented answer\nthat does not adequately capture the complex inter-dependencies among these topics.\nTo address these limitations, we propose incorporating graph structures into text indexing and\nrelevant information retrieval. Graphs are particularly effective at representing the interdependencies\namong different entities Rampášek et al. (2022), which enables a more nuanced understanding\nof relationships. The integration of graph-based knowledge structures facilitates the synthesis of\ninformation from multiple sources into coherent and contextually rich responses. Despite these\nadvantages, developing a fast and scalable graph-empowered RAG system that efficiently handles\nvarying query volumes is crucial. In this work, we achieve an effective and efficient RAG system by\naddressing three key challenges: i) Comprehensive Information Retrieval. Ensuring comprehensive\ninformation retrieval that captures the full context of inter-dependent entities from all documents;\nii) Enhanced Retrieval Efficiency. Improving retrieval efficiency over the graph-based knowledge\nstructures to significantly reduce response times; iii) Rapid Adaptation to New Data. Enabling\nquick adaptation to new data updates, ensuring the system remains relevant in dynamic environments.\nIn response to the outlined challenges, we propose LightRAG, a model that seamlessly integrates a\ngraph-based text indexing paradigm with a dual-level retrieval framework. This innovative approach\nenhances the system’s capacity to capture complex inter-dependencies among entities, resulting in\nmore coherent and contextually rich responses. LightRAG employs efficient dual-level retrieval\nstrategies: low-level retrieval, which focuses on precise information about specific entities and their\nrelationships, and high-level retrieval, which encompasses broader topics and themes. By combining\nboth detailed and conceptual retrieval, LightRAG effectively accommodates a diverse range of quries,\nensuring that users receive relevant and comprehensive responses tailored to their specific needs.\nAdditionally, by integrating graph structures with vector representations, our framework facilitates\nefficient retrieval of related entities and relations while enhancing the comprehensiveness of results\nthrough relevant structural information from the constructed knowledge graph.\nIn summary, the key contributions of this work are highlighted as follows:\n• General Aspect. We emphasize the importance of developing a graph",
    "chunk_order_index": 0,
    "full_doc_id": "doc-45052d5e5c880b8ad46be8afde8266c9"
  },
  "chunk-e6debf563390e9a07a3d588f65a9fdc4": {
    "tokens": 1200,
    "content": "both detailed and conceptual retrieval, LightRAG effectively accommodates a diverse range of quries,\nensuring that users receive relevant and comprehensive responses tailored to their specific needs.\nAdditionally, by integrating graph structures with vector representations, our framework facilitates\nefficient retrieval of related entities and relations while enhancing the comprehensiveness of results\nthrough relevant structural information from the constructed knowledge graph.\nIn summary, the key contributions of this work are highlighted as follows:\n• General Aspect. We emphasize the importance of developing a graph-empowered RAG system to\novercome the limitations of existing methods. By integrating graph structures into text indexing,\nwe can effectively represent complex interdependencies among entities, fostering a nuanced\nunderstanding of relationships and enabling coherent, contextually rich responses.\n• Methodologies. To enable an efficient and adaptive RAG system, we propose LightRAG, which\nintegrates a dual-level retrieval paradigm with graph-enhanced text indexing. This approach\ncaptures both low-level and high-level information for comprehensive, cost-effective retrieval.\nBy eliminating the need to rebuild the entire index, LightRAG reduces computational costs and\naccelerates adaptation, while its incremental update algorithm ensures timely integration of new\ndata, maintaining effectiveness in dynamic environments.\n• Experimental Findings. Extensive experiments were conducted to evaluate the effectiveness of\nLightRAG in comparison to existing RAG models. These assessments focused on several key\ndimensions, including retrieval accuracy, model ablation, response efficiency, and adaptability to\nnew information. The results demonstrated significant improvements over baseline methods.\n2 R ETRIEVAL -AUGMENTED GENERATION\nRetrieval-Augmented Generation (RAG) integrates user queries with a collection of pertinent doc-\numents sourced from an external knowledge database, incorporating two essential elements: the\nRetrieval Component and the Generation Component. 1) The retrieval component is responsible\nfor fetching relevant documents or information from the external knowledge database. It identifies and\nretrieves the most pertinent data based on the input query. 2) After the retrieval process, the generation\ncomponent takes the retrieved information and generates coherent, contextually relevant responses. It\nleverages the capabilities of the language model to produce meaningful outputs. Formally, this RAG\nframework, denoted as M, can be defined as follows:\nM =\n\u0010\nG, R = (φ, ψ)\n\u0011\n, M(q; D) =G\n\u0010\nq, ψ(q; ˆD)\n\u0011\n, ˆD = φ(D) (1)\nIn this framework, G and R represent the generation module and the retrieval module, respectively,\nwhile q denotes the input query and D refers to the external database. The retrieval module R\n2\nQuery + LLM\nEntity Name:  Beekeeper\nEntity Type: PERSON\nDescription: A Beekeeper is \nan individual who produces ...\nOriginal Chunks ID: xxx\nSource: Honey Bee\nTarget: Industrial agriculture\nKeywords: Agriculture ...\nDescription:Honey Bees are \nnegatively impacted ...\nOriginal Chunks ID: xxx\n... BEEKEEPER‘spractices involve\nthe methods and strategies employed\nby beekeepers to manage bee\ncolonies and ensure their health and\nproductivity. A Beekeeper is an\nindividual who produces honey and\nother related products, playing a\ncrucial role in ……\nBeekeepers engage in various tasks,\nincluding observing bee behavior,\nmonitoring hive conditions,\npreventing pest infestations, and\nutilizing techniques to handle bees,\nsuch as using smoke to calm them ...\n Original Text\n-----Entities-----\n\"Beekeeper\",”A Beekeeper is an\nindividual who produces honey and\nother related products, playing a\ncrucial role in ......”\n-Relationships-\n\"Beekeeper\",“bee\",\"Beekeepers\nmanage bees but do not develop\nindividual relationships with them\ndue to the limited interaction time\nwith each hive.”\n----Contexts----\nBEEKEEPER's practices involve the\nmethods and strategies employed\nby beekeepers to manage ……\nGraph-based Text Indexing Dual-level Retrieval Paradigm\nEntity & Rel Extraction\nBeekeeper BeesObserve\nBeekeeper\nA beekeeper \nis an person \nwho…\nLLM Profiling\nBeekeeper beekeeper\nDeduplication\n…\nMatch\nIndex Graph \nused for Retrieval\nBeekeeper Honey Bee\n…Formers Hive\nLow-level Keys\nAgriculture Production\nEnvironmental Impact …\nHigh-level Keys\nEntities\nRelations\nRetrieved Content\nFigure 1: Overall architecture of the proposed LightRAG framework.\nincludes two key functionalities: i) Data Indexer φ(·): which involves building a specific data\nstructure ˆD based on the external database D. ii) Data Retriever ψ(·): The relevant documents are\nobtained by comparing the query against the indexed data, also denoted as “relevant documents”. By\nleveraging the information retrieved through ψ(·) along with the initial query q, the generative model\nG(·) efficiently produces high-quality, contextually relevant responses.\nIn this work, we target several key points essential for an efficient and effective Retrieval-Augmented\nGeneration (RAG) system which are elaborated below:\n• Comprehensive Information Retrieval: The indexing function φ(·) must be adept at extracting\nglobal information, as this is crucial for enhancing the model’s ability to answer queries effectively.\n• Efficient and Low-Cost Retrieval : The indexed data structure ˆD must enable rapid and cost-\nefficient retrieval to effectively handle a high volume of queries.\n• Fast Adaptation to Data Changes: The ability to swiftly and efficiently adjust the data structure\nto incorporate new information from the external knowledge base, is crucial for ensuring that the\nsystem remains current and relevant in an ever-changing information landscape.\n3 T HE LIGHT RAG A RCHITECTURE\n3.1 G RAPH -",
    "chunk_order_index": 1,
    "full_doc_id": "doc-45052d5e5c880b8ad46be8afde8266c9"
  },
  "chunk-5811df37bca65a0cb2913556357476bc": {
    "tokens": 1200,
    "content": "• Efficient and Low-Cost Retrieval : The indexed data structure ˆD must enable rapid and cost-\nefficient retrieval to effectively handle a high volume of queries.\n• Fast Adaptation to Data Changes: The ability to swiftly and efficiently adjust the data structure\nto incorporate new information from the external knowledge base, is crucial for ensuring that the\nsystem remains current and relevant in an ever-changing information landscape.\n3 T HE LIGHT RAG A RCHITECTURE\n3.1 G RAPH -BASED TEXT INDEXING\nGraph-Enhanced Entity and Relationship Extraction . Our LightRAG enhances the retrieval\nsystem by segmenting documents into smaller, more manageable pieces. This strategy allows for\nquick identification and access to relevant information without analyzing entire documents. Next,\nwe leverage LLMs to identify and extract various entities (e.g., names, dates, locations, and events)\nalong with the relationships between them. The information collected through this process will be\nused to create a comprehensive knowledge graph that highlights the connections and insights across\nthe entire collection of documents. We formally represent this graph generation module as follows:\nˆD = (ˆV, ˆE) =Dedupe ◦ Prof(V, E), V, E = ∪Di∈DRecog(Di) (2)\nwhere ˆD represents the resulting knowledge graphs. To generate this data, we apply three main\nprocessing steps to the raw text documents Di. These steps utilize a LLM for text analysis and\nprocessing. Details about the prompt templates and specific settings for this part can be found in\nAppendix 7.3.2. The functions used in our graph-based text indexing paradigm are described as:\n• Extracting Entities and Relationships. R(·): This function prompts a LLM to identify entities\n(nodes) and their relationships (edges) within the text data. For instance, it can extract entities\nlike \"Cardiologists\" and \"Heart Disease,\" and relationships such as \"Cardiologists diagnose Heart\nDisease\" from the text: \"Cardiologists assess symptoms to identify potential heart issues.\" To\nimprove efficiency, the raw textD is segmented into multiple chunks Di.\n• LLM Profiling for Key-Value Pair Generation. P(·): We employ a LLM-empowered profiling\nfunction, P(·), to generate a text key-value pair (K, V) for each entity node in V and relation\nedge in E. Each index key is a word or short phrase that enables efficient retrieval, while the\ncorresponding value is a text paragraph summarizing relevant snippets from external data to aid in\ntext generation. Entities use their names as the sole index key, whereas relations may have multiple\nindex keys derived from LLM enhancements that include global themes from connected entities.\n• Deduplication to Optimize Graph Operations . D(·): Finally, we implement a deduplication\nfunction, D(·), that identifies and merges identical entities and relations from different segments of\n3\nthe raw text Di. This process effectively reduces the overhead associated with graph operations on\nˆD by minimizing the graph’s size, leading to more efficient data processing.\nOur LightRAG offers two advantages through its graph-based text indexing paradigm. First, Com-\nprehensive Information Understanding. The constructed graph structures enable the extraction\nof global information from multi-hop subgraphs, greatly enhancing LightRAG’s ability to handle\ncomplex queries that span multiple document chunks. Second, Enhanced Retrieval Performance.\nthe key-value data structures derived from the graph are optimized for rapid and precise retrieval.\nThis provides a superior alternative to less accurate embedding matching methods (Gao et al., 2023)\nand inefficient chunk traversal techniques (Edge et al., 2024) commonly used in existing approaches.\nFast Adaptation to Incremental Knowledge Base. To efficiently adapt to evolving data changes\nwhile ensuring accurate and relevant responses, our LightRAG incrementally updates the knowledge\nbase without the need for complete reprocessing of the entire external database. For a new document\nD′, the incremental update algorithm processes it using the same graph-based indexing steps φ as\nbefore, resulting in ˆD′ = (ˆV′, ˆE′). Subsequently, LightRAGcombines the new graph data with the\noriginal by taking the union of the node sets ˆV and ˆV′, as well as the edge sets ˆE and ˆE′.\nTwo key objectives guide our approach to fast adaptation for the incremental knowledge base: Seam-\nless Integration of New Data . By applying a consistent methodology to new information, the\nincremental update module allows the LightRAG to integrate new external databases without disrupt-\ning the existing graph structure. This approach preserves the integrity of established connections,\nensuring that historical data remains accessible while enriching the graph without conflicts or redun-\ndancies. Reducing Computational Overhead . By eliminating the need to rebuild the entire index\ngraph, this method reduces computational overhead and facilitates the rapid assimilation of new data.\nConsequently, LightRAG maintains system accuracy, provides current information, and conserves\nresources, ensuring users receive timely updates and enhancing the overall RAG effectiveness.\n3.2 D UAL -LEVEL RETRIEVAL PARADIGM\nTo retrieve relevant information from both specific document chunks and their complex inter-\ndependencies, our LightRAG proposes generating query keys at both detailed and abstract levels.\n• Specific Queries. These queries are detail-oriented and typically reference specific entities within\nthe graph, requiring precise retrieval of information associated with particular nodes or edges. For\nexample, a specific query might be, “Who wrote ’Pride and Prejudice’?”\n• Abstract Queries. In contrast, abstract queries are more conceptual, encompassing broader topics,\nsummaries, or overarching themes that are not directly tied to specific entities. An example of an\nabstract query is, “",
    "chunk_order_index": 2,
    "full_doc_id": "doc-45052d5e5c880b8ad46be8afde8266c9"
  },
  "chunk-4b7ec4c901a260e0e9946185853e13c3": {
    "tokens": 1200,
    "content": "both detailed and abstract levels.\n• Specific Queries. These queries are detail-oriented and typically reference specific entities within\nthe graph, requiring precise retrieval of information associated with particular nodes or edges. For\nexample, a specific query might be, “Who wrote ’Pride and Prejudice’?”\n• Abstract Queries. In contrast, abstract queries are more conceptual, encompassing broader topics,\nsummaries, or overarching themes that are not directly tied to specific entities. An example of an\nabstract query is, “How does artificial intelligence influence modern education?”\nTo accommodate diverse query types, the LightRAG employs two distinct retrieval strategies within\nthe dual-level retrieval paradigm. This ensures that both specific and abstract inquiries are addressed\neffectively, allowing the system to deliver relevant responses tailored to user needs.\n• Low-Level Retrieval. This level is primarily focused on retrieving specific entities along with their\nassociated attributes or relationships. Queries at this level are detail-oriented and aim to extract\nprecise information about particular nodes or edges within the graph.\n• High-Level Retrieval. This level addresses broader topics and overarching themes. Queries at this\nlevel aggregate information across multiple related entities and relationships, providing insights\ninto higher-level concepts and summaries rather than specific details.\nIntegrating Graph and Vectors for Efficient Retrieval . By combining graph structures with\nvector representations, the model gains a deeper insight into the interrelationships among entities.\nThis synergy enables the retrieval algorithm to effectively utilize both local and global keywords,\nstreamlining the search process and improving the relevance of results.\n• (i) Query Keyword Extraction. For a given query q, the retrieval algorithm of LightRAG begins\nby extracting both local query keywords k(l) and global query keywords k(g).\n• (ii) Keyword Matching. The algorithm uses an efficient vector database to match local query\nkeywords with candidate entities and global query keywords with relations linked to global keys.\n4\n• (iii) Incorporating High-Order Relatedness. To enhance the query with higher-order relatedness,\nLightRAGfurther gathers neighboring nodes within the local subgraphs of the retrieved graph\nelements. This process involves the set {vi|vi ∈ V ∧(vi ∈ Nv ∨ vi ∈ Ne)}, where Nv and Ne\nrepresent the one-hop neighboring nodes of the retrieved nodes v and edges e, respectively.\nThis dual-level retrieval paradigm not only facilitates efficient retrieval of related entities and relations\nthrough keyword matching, but also enhances the comprehensiveness of results by integrating relevant\nstructural information from the constructed knowledge graph.\n3.3 R ETRIEVAL -AUGMENTED ANSWER GENERATION\nUtilization of Retrieved Information. Utilizing the retrieved information ψ(q; ˆD), our LightRAG\nemploys a general-purpose LLM to generate answers based on the collected data. This data comprises\nconcatenated values V from relevant entities and relations, produced by the profiling function P(·). It\nincludes names, descriptions of entities and relations, and excerpts from the original text.\nContext Integration and Answer Generation. By unifying the query with this multi-source text,\nthe LLM generates informative answers tailored to the user’s needs, ensuring alignment with the\nquery’s intent. This approach streamlines the answer generation process by integrating both context\nand query into the LLM model, as illustrated in detailed examples (Appendix 7.2).\n3.4 C OMPLEXITY ANALYSIS OF THE LIGHT RAG F RAMEWORK\nIn this section, we analyze the complexity of our proposed LightRAG framework, which can be\ndivided into two main parts. The first part is the graph-based Index phase. During this phase, we use\nthe large language model (LLM) to extract entities and relationships from each chunk of text. As\na result, the LLM needs to be called total tokens\nchunk size times. Importantly, there is no additional overhead\ninvolved in this process, making our approach highly efficient in managing updates to new text.\nThe second part of the process involves the graph-based retrieval phase. For each query, we first\nutilize the large language model (LLM) to generate relevant keywords. Similar to current Retrieval-\nAugmented Generation (RAG) systems Gao et al. (2023; 2022); Chan et al. (2024), our retrieval\nmechanism relies on vector-based search. However, instead of retrieving chunks as in conventional\nRAG, we concentrate on retrieving entities and relationships. This approach markedly reduces\nretrieval overhead compared to the community-based traversal method used in GraphRAG.\n4 E VALUATION\nWe conduct empirical evaluations on benchmark data to assess the effectiveness of the proposed\nLightRAG framework by addressing the following research questions:• (RQ1): How does LightRAG\ncompare to existing RAG baseline methods in terms of generation performance? • (RQ2): How do\ndual-level retrieval and graph-based indexing enhance the generation quality of LightRAG? • (RQ3):\nWhat specific advantages does LightRAG demonstrate through case examples in various scenarios? •\n(RQ4): What are the costs associated with LightRAG, as well as its adaptability to data changes?\n4.1 E XPERIMENTAL SETTINGS\nEvaluation Datasets. To conduct a comprehensive analysis of LightRAG, we selected four datasets\nfrom the UltraDomain benchmark (Qian et al., 2024). The UltraDomain data is sourced from 428\ncollege textbooks and encompasses 18 distinct domains, including agriculture, social sciences, and\nhumanities. From these, we chose the Agriculture, CS, Legal, and Mix datasets. Each dataset contains\nbetween 600,000 and 5,000,000 tokens, with detailed information provided in Table 4. Below is a\nspecific introduction to the four domains utilized in our experiments:\n• Agriculture: This domain focuses on agricultural practices",
    "chunk_order_index": 3,
    "full_doc_id": "doc-45052d5e5c880b8ad46be8afde8266c9"
  },
  "chunk-bc3d280001a458bb8f33320d18658757": {
    "tokens": 1200,
    "content": "2024). The UltraDomain data is sourced from 428\ncollege textbooks and encompasses 18 distinct domains, including agriculture, social sciences, and\nhumanities. From these, we chose the Agriculture, CS, Legal, and Mix datasets. Each dataset contains\nbetween 600,000 and 5,000,000 tokens, with detailed information provided in Table 4. Below is a\nspecific introduction to the four domains utilized in our experiments:\n• Agriculture: This domain focuses on agricultural practices, covering a range of topics including\nbeekeeping, hive management, crop production, and disease prevention.\n• CS: This domain focuses on computer science and encompasses key areas of data science and\nsoftware engineering. It particularly highlights machine learning and big data processing, featuring\ncontent on recommendation systems, classification algorithms, and real-time analytics using Spark.\n5\n• Legal: This domain centers on corporate legal practices, addressing corporate restructuring, legal\nagreements, regulatory compliance, and governance, with a focus on the legal and financial sectors.\n• Mixed: This domain presents a rich variety of literary, biographical, and philosophical texts,\nspanning a broad spectrum of disciplines, including cultural, historical, and philosophical studies.\nQuestion Generation. To evaluate the effectiveness of RAG systems for high-level sensemaking\ntasks, we consolidate all text content from each dataset as context and adopt the generation method\noutlined in Edge et al. (2024). Specifically, we instruct an LLM to generate five RAG users, along\nwith five tasks for each user. Each generated user is accompanied by a textual description detailing\ntheir expertise and traits that motivate their question-raising activities. Each user task is also described,\nemphasizing one of the user’s potential intentions when interacting with RAG systems. For each\nuser-task combination, the LLM generates five questions that require an understanding of the entire\ncorpus. In total, this process results in 125 questions for each dataset.\nBaselines. LightRAG is compared against the following state-of-the-art methods across all datasets:\n• Naive RAG (Gao et al., 2023): This model serves as a standard baseline in existing RAG systems.\nIt segments raw texts into chunks and stores them in a vector database using text embeddings. For\nqueries, Naive RAG generates vectorized representations to directly retrieve text chunks based on\nthe highest similarity in their representations, ensuring efficient and straightforward matching.\n• RQ-RAG (Chan et al., 2024): This approach leverages the LLM to decompose the input query\ninto multiple sub-queries. These sub-queries are designed to enhance search accuracy by utilizing\nexplicit techniques such as rewriting, decomposition, and disambiguation.\n• HyDE (Gao et al., 2022): This method utilizes the LLM to generate a hypothetical document based\non the input query. This generated document is then employed to retrieve relevant text chunks,\nwhich are subsequently used to formulate the final answer.\n• GraphRAG (Edge et al., 2024): This is a graph-enhanced RAG system that utilizes an LLM to\nextract entities and relationships from the text, representing them as nodes and edges. It generates\ncorresponding descriptions for these elements, aggregates nodes into communities, and produces a\ncommunity report to capture global information. When handling high-level queries, GraphRAG\nretrieves more comprehensive information by traversing these communities.\nImplementation and Evaluation Details. In our experiments, we utilize the nano vector database\nfor vector data management and access. For all LLM-based operations in LightRAG, we default\nto using GPT-4o-mini. To ensure consistency, the chunk size is set to 1200 across all datasets.\nAdditionally, the gleaning parameter is fixed at 1 for both GraphRAG and LightRAG.\nDefining ground truth for many RAG queries, particularly those involving complex high-level\nsemantics, poses significant challenges. To address this, we build on existing work (Edge et al.,\n2024) and adopt an LLM-based multi-dimensional comparison method. We employ a robust LLM,\nspecifically GPT-4o-mini, to rank each baseline against our LightRAG. The evaluation prompt we\nused is detailed in Appendix 7.3.4. In total, we utilize four evaluation dimensions, including:\ni) Comprehensiveness: How thoroughly does the answer address all aspects and details of the\nquestion? ii) Diversity: How varied and rich is the answer in offering different perspectives and\ninsights related to the question? iii) Empowerment: How effectively does the answer enable the\nreader to understand the topic and make informed judgments? iv) Overall: This dimension assesses\nthe cumulative performance across the three preceding criteria to identify the best overall answer.\nThe LLM directly compares two answers for each dimension and selects the superior response for\neach criterion. After identifying the winning answer for the three dimensions, the LLM combines the\nresults to determine the overall better answer. To ensure a fair evaluation and mitigate the potential\nbias that could arise from the order in which the answers are presented in the prompt, we alternate the\nplacement of each answer. We calculate win rates accordingly, ultimately leading to the final results.\n4.2 C OMPARISON OF LIGHT RAG WITH EXISTING RAG M ETHODS (RQ1)\nWe compare LightRAG against each baseline across various evaluation dimensions and datasets. The\nresults are presented in Table 1. Based on these findings, we draw the following conclusions:\n6\nTable 1: Win rates (%) of baselines v.s. LightRAG across four datasets and four evaluation dimensions.\nAgriculture CS Legal Mix\nNaiveRAGLightRAGNaiveRAGLightRAGNaiveRAGLightRAGNaiveRAGLightRAG\nComprehensiveness 32",
    "chunk_order_index": 4,
    "full_doc_id": "doc-45052d5e5c880b8ad46be8afde8266c9"
  },
  "chunk-9f8e3627478a2b09fd67b71faac55de0": {
    "tokens": 1200,
    "content": "RAG against each baseline across various evaluation dimensions and datasets. The\nresults are presented in Table 1. Based on these findings, we draw the following conclusions:\n6\nTable 1: Win rates (%) of baselines v.s. LightRAG across four datasets and four evaluation dimensions.\nAgriculture CS Legal Mix\nNaiveRAGLightRAGNaiveRAGLightRAGNaiveRAGLightRAGNaiveRAGLightRAG\nComprehensiveness 32.4% 67.6% 38.4% 61.6% 16.4% 83.6% 38.8% 61.2%\nDiversity 23.6% 76.4% 38.0% 62.0% 13.6% 86.4% 32.4% 67.6%\nEmpowerment 32.4% 67.6% 38.8% 61.2% 16.4% 83.6% 42.8% 57.2%\nOverall 32.4% 67.6% 38.8% 61.2% 15.2% 84.8% 40.0% 60.0%\nRQ-RAGLightRAGRQ-RAGLightRAGRQ-RAGLightRAGRQ-RAGLightRAG\nComprehensiveness 31.6% 68.4% 38.8% 61.2% 15.2% 84.8% 39.2% 60.8%\nDiversity 29.2% 70.8% 39.2% 60.8% 11.6% 88.4% 30.8% 69.2%\nEmpowerment 31.6% 68.4% 36.4% 63.6% 15.2% 84.8% 42.4% 57.6%\nOverall 32.4% 67.6% 38.0% 62.0% 14.4% 85.6% 40.0% 60.0%\nHyDE LightRAG HyDE LightRAG HyDE LightRAG HyDE LightRAG\nComprehensiveness 26.0% 74.0% 41.6% 58.4% 26.8% 73.2% 40.4% 59.6%\nDiversity 24.0% 76.0% 38.8% 61.2% 20.0% 80.0% 32.4% 67.6%\nEmpowerment 25.2% 74.8% 40.8% 59.2% 26.0% 74.0% 46.0% 54.0%\nOverall 24.8% 75.2% 41.6% 58.4% 26.4% 73.6% 42.4% 57.6%\nGraphRAGLightRAGGraphRAGLightRAGGraphRAGLightRAGGraphRAGLightRAG\nComprehensiveness 45.6% 54.4% 48.4% 51.6% 48.4% 51.6% 50.4% 49.6%\nDiversity 22.8% 77.2% 40.8% 59.2% 26.4% 73.6% 36.0% 64.0%\nEmpowerment 41.2% 58.8% 45.2% 54.8% 43.6% 56.4% 50.8% 49.2%\nOverall 45.2% 54.8% 48.0% 52.0% 47.2% 52.8% 50.4% 49.6%\nThe Superiority of Graph-enhanced RAG Systems in Large-Scale Corpora When handling large\ntoken counts and complex queries that require a thorough understanding of the dataset’s context,\ngraph-based RAG systems like LightRAG and GraphRAG consistently outperform purely chunk-\nbased retrieval methods such as NaiveRAG, HyDE, and RQRAG. This performance gap becomes\nparticularly pronounced as the dataset size increases. For instance, in the largest dataset (Legal), the\ndisparity widens significantly, with baseline methods achieving only about 20% win rates compared\nto the dominance of LightRAG. This trend underscores the advantages of graph-enhanced RAG\nsystems in capturing complex semantic dependencies within large-scale corpora, facilitating a more\ncomprehensive understanding of knowledge and leading to improved generalization performance.\nEnhancing Response Diversity with LightRAG: Compared to various baselines, LightRAG demon-\nstrates a significant advantage in the Diversity metric, particularly within the larger Legal dataset.\nIts consistent lead in this area underscores LightRAG’s effectiveness in generating a wider range\nof responses, especially in scenarios where diverse content is essential. We attribute this advantage\nto LightRAG’s dual-level retrieval paradigm, which facilitates comprehensive information retrieval\nfrom both low-level and high-level dimensions. This approach effectively leverages graph-based text\nindexing to consistently capture the full context in response to queries.\nLightRAG’s Superiority over GraphRAG: While both LightRAG and GraphRAG use graph-based\nretrieval mechanisms, LightRAG consistently outperforms GraphRAG, particularly in larger datasets\nwith complex language contexts. In the Agriculture, CS, and Legal datasets—each containing millions\nof tokens—LightRAG shows",
    "chunk_order_index": 5,
    "full_doc_id": "doc-45052d5e5c880b8ad46be8afde8266c9"
  },
  "chunk-738e35e30dadb213dc8631387b6e178b": {
    "tokens": 1200,
    "content": "both low-level and high-level dimensions. This approach effectively leverages graph-based text\nindexing to consistently capture the full context in response to queries.\nLightRAG’s Superiority over GraphRAG: While both LightRAG and GraphRAG use graph-based\nretrieval mechanisms, LightRAG consistently outperforms GraphRAG, particularly in larger datasets\nwith complex language contexts. In the Agriculture, CS, and Legal datasets—each containing millions\nof tokens—LightRAG shows a clear advantage, significantly surpassing GraphRAG and highlighting\nits strength in comprehensive information understanding within diverse environments. Enhanced\nResponse Variety: By integrating low-level retrieval of specific entities with high-level retrieval of\nbroader topics, LightRAG boosts response diversity. This dual-level mechanism effectively addresses\nboth detailed and abstract queries, ensuring a thorough grasp of information. Complex Query\nHandling: This approach is especially valuable in scenarios requiring diverse perspectives. By\naccessing both specific details and overarching themes, LightRAG adeptly responds to complex\nqueries involving interconnected topics, providing contextually relevant answers.\n4.3 A BLATION STUDIES (RQ2)\nWe also conduct ablation studies to evaluate the impact of our dual-level retrieval paradigm and the\neffectiveness of our graph-based text indexing in LightRAG. The results are presented in Table 2.\nEffectiveness of Dual-level Retrieval Paradigm. We begin by analyzing the effects of low-level and\nhigh-level retrieval paradigms. We compare two ablated models—each omitting one module—against\nLightRAG across four datasets. Here are our key observations for the different variants:\n7\nTable 2: Performance of ablated versions of LightRAG, using NaiveRAG as reference.\nAgriculture CS Legal Mix\nNaiveRAGLightRAGNaiveRAGLightRAGNaiveRAGLightRAGNaiveRAGLightRAG\nComprehensiveness 32.4% 67.6% 38.4% 61.6% 16.4% 83.6% 38.8% 61.2%Diversity 23.6% 76.4% 38.0% 62.0% 13.6% 86.4% 32.4% 67.6%Empowerment 32.4% 67.6% 38.8% 61.2% 16.4% 83.6% 42.8% 57.2%Overall 32.4% 67.6% 38.8% 61.2% 15.2% 84.8% 40.0% 60.0%\nNaiveRAG -High NaiveRAG -High NaiveRAG -High NaiveRAG -High\nComprehensiveness 34.8% 65.2% 42.8% 57.2% 23.6% 76.4% 40.4% 59.6%Diversity 27.2% 72.8% 36.8% 63.2% 16.8% 83.2% 36.0% 64.0%Empowerment 36.0% 64.0% 42.4% 57.6% 22.8% 77.2% 47.6% 52.4%Overall 35.2% 64.8% 44.0% 56.0% 22.0% 78.0% 42.4% 57.6%\nNaiveRAG -Low NaiveRAG -Low NaiveRAG -Low NaiveRAG -Low\nComprehensiveness 36.0% 64.0% 43.2% 56.8% 19.2% 80.8% 36.0% 64.0%Diversity 28.0% 72.0% 39.6% 60.4% 13.6% 86.4% 33.2% 66.8%Empowerment 34.8% 65.2% 42.8% 57.2% 16.4% 83.6% 35.2% 64.8%Overall 34.8% 65.2% 43.6% 56.4% 18.8% 81.2% 35.2% 64.8%\nNaiveRAG -Origin NaiveRAG -Origin NaiveRAG -Origin NaiveRAG -Origin\nComprehensiveness 24.8% 75.2% 39.2% 60.8% 16.4% 83.6% 44.4% 55.6%Diversity 26.4% 73.6% 44.8% 55.2% 14.4% 85.6% 25.6% 74.4%Empowerment 32.0% 68.0% 43.2% 56.8% 17.2% 82.8% 45.2% 54.8%Overall 25.6% 74.4% 39.2% 60.8% 15.6% 84.4% 44.4% 55.6%\n• Low-level-only Retrieval: The -High variant removes high-order retrieval, leading to a significant\nperformance decline across nearly all datasets and metrics. This drop is mainly due to its emphasis\non the specific information, which focuses excessively on entities and their immediate neighbors.\nWhile this approach enables deeper exploration",
    "chunk_order_index": 6,
    "full_doc_id": "doc-45052d5e5c880b8ad46be8afde8266c9"
  },
  "chunk-d01baacd18683c34cceed626b969003b": {
    "tokens": 1200,
    "content": "Overall 25.6% 74.4% 39.2% 60.8% 15.6% 84.4% 44.4% 55.6%\n• Low-level-only Retrieval: The -High variant removes high-order retrieval, leading to a significant\nperformance decline across nearly all datasets and metrics. This drop is mainly due to its emphasis\non the specific information, which focuses excessively on entities and their immediate neighbors.\nWhile this approach enables deeper exploration of directly related entities, it struggles to gather\ninformation for complex queries that demand comprehensive insights.\n• High-level-only Retrieval: The -Low variant prioritizes capturing a broader range of content by\nleveraging entity-wise relationships rather than focusing on specific entities. This approach offers\na significant advantage in comprehensiveness, allowing it to gather more extensive and varied\ninformation. However, the trade-off is a reduced depth in examining specific entities, which can\nlimit its ability to provide highly detailed insights. Consequently, this high-level-only retrieval\nmethod may struggle with tasks that require precise, detailed answers.\n• Hybrid Mode: The hybrid mode, or the full version of LightRAG, combines the strengths of\nboth low-level and high-level retrieval methods. It retrieves a broader set of relationships while\nsimultaneously conducting an in-depth exploration of specific entities. This dual-level approach\nensures both breadth in the retrieval process and depth in the analysis, providing a comprehensive\nview of the data. As a result, LightRAG achieves balanced performance across multiple dimensions.\nSemantic Graph Excels in RAG. We eliminated the use of original text in our retrieval process.\nSurprisingly, the resulting variant, -Origin, does not exhibit significant performance declines across\nall four datasets. In some cases, this variant even shows improvements (e.g. in Agriculture and Mix).\nWe attribute this phenomenon to the effective extraction of key information during the graph-based\nindexing process, which provides sufficient context for answering queries. Additionally, the original\ntext often contains irrelevant information that can introduce noise in the response.\n4.4 C ASE STUDY (RQ3)\nTo provide a clear comparison between baseline methods and our LightRAG, we present specific\ncase examples in Table 3, which includes responses to a machine learning question from both\nthe competitive baseline, GraphRAG, and our LightRAG framework. In this instance, LightRAG\noutperforms in all evaluation dimensions assessed by the LLM judge, including comprehensiveness,\ndiversity, empowerment, and overall quality. Our key observations are as follows:\ni) Comprehensiveness. Notably, LightRAG covers a broader range of machine learning metrics,\nshowcasing its comprehensiveness and ability to effectively discover relevant information. This\nhighlights the strength of our graph-based indexing paradigm, which excels in precise entity and\nrelation extraction as well as LLM profiling. ii) Both Diversity and Empowerment. Furthermore,\nLightRAG not only offers a more diverse array of information but also delivers more empowering\ncontent. This success is due to LightRAG’s hierarchical retrieval paradigm, which combines in-depth\n8\nTable 3: Case Study: Comparison Between LightRAG and the Baseline Method GraphRAG.\nQuery Which methods can normalize the feature values for effective machine learning?\nGraphRAG Key Metrics for Evaluating Movie Recommendation Systems: Evaluating the effectiveness of movie\nrecommendation systems is crucial for ensuring user satisfaction and improving the overall performance of\nthese systems. Several metrics are widely recognized for their ability to provide insights into how well a\nrecommendation system performs. Below are the most informative metrics: 1.Precision[...] 2.Recall[...]\n3.F1 Score[...] 4.Mean Average Precision (MAP)[...] 5.Root Mean Squared Error (RMSE)[...] 6.\nUser Satisfaction Metrics[...]Conclusion: In summary, metrics such as precision, recall, F1 score, MAP,\nRMSE, and user satisfaction are critical for evaluating the performance of movie recommendation systems.\nEach metric provides unique insights that can help developers and researchers refine their algorithms and\nenhance user experiences. By focusing on these metrics, stakeholders can ensure that their recommendation\nsystems effectively meet user preferences and expectations.\nLightRAG Key Metrics for Evaluating Movie Recommendation Systems: Evaluating movie recommendation systems\ninvolves multiple metrics that assess the effectiveness and accuracy of the recommendations provided to\nusers. Below are some of the most informative metrics commonly used in this context, derived from the\ndata and concepts surrounding recommendation systems. 1.Mean Average Precision at K (MAPK)[...] 2.\nPrecision and Recall[...] 3.Root Mean Squared Error (RMSE) and Mean Squared Error (MSE)[...]\n4.Area Under the Curve (AUC)[...] 5.F-Measure[...] 6.User Engagement Metrics[...]Conclusion: A\ncomprehensive evaluation of movie recommendation systems employs a range of metrics that capture both\nthe accuracy of the recommendations and user satisfaction. By effectively leveraging these metrics, system\ndesigners can optimize recommendation engines to deliver more personalized and relevant experiences.\nLLM DecisionComprehensiveness: \"Winner\": \"Answer 2 (LightRAG)\",\n\"Explanation\": \"Answer 2 provides a broader array of metrics including MAPK, AUC, and user engagement\nmetrics alongside precision, recall, RMSE, and F-Measure. This gives a fuller view of how recommendation\nsystems can be evaluated. Answer 1, while detailed, is more focused on traditional metrics and lacks the\ninclusion of engagement metrics which are crucial for understanding user interaction.\"\nDiversity: \"Winner\": \"Answer 2 (LightRAG)\",\n\"Explanation\": \"Answer 2 not only covers a wide variety of metrics but also includes nuanced explanations\nof how some metrics interrelate and differ from one another, like the inclusion of both RM",
    "chunk_order_index": 7,
    "full_doc_id": "doc-45052d5e5c880b8ad46be8afde8266c9"
  },
  "chunk-9444bf125e11d7eefd3bcbe1a9fc7327": {
    "tokens": 1200,
    "content": ". This gives a fuller view of how recommendation\nsystems can be evaluated. Answer 1, while detailed, is more focused on traditional metrics and lacks the\ninclusion of engagement metrics which are crucial for understanding user interaction.\"\nDiversity: \"Winner\": \"Answer 2 (LightRAG)\",\n\"Explanation\": \"Answer 2 not only covers a wide variety of metrics but also includes nuanced explanations\nof how some metrics interrelate and differ from one another, like the inclusion of both RMSE and MSE, as\nwell as the details behind AUC. In contrast, Answer 1 sticks primarily to standard metrics without much\nexploration of potential nuances.\"\nEmpowerment: \"Winner\": \"Answer 2 (LightRAG)\",\n\"Explanation\": \"Answer 2 empowers the reader more effectively by detailing how each metric functions and\nits importance in evaluating recommendation systems. By providing context such as the trade-offs between\nprecision and recall and emphasizing user engagement metrics, it enables readers to make more informed\njudgments and understand the implications of different metrics. Answer 1 is more straightforward but lacks\nthe depth of insight regarding why these metrics matter.\"\nOverall Winner: \"Winner\": \"Answer 2 (LightRAG)\",\n\"Explanation\": \"While Answer 1 is more direct and systematic, Answer 2 excels in comprehensiveness,\ndiversity, and empowerment. It provides a richer exploration of the topic, including insights into user\nengagement and nuanced differences between metrics. This depth and breadth make it more informative for\nreaders seeking to thoroughly understand the evaluation of movie recommendation systems.\"\nexplorations of related entities through low-level retrieval to enhance empowerment with broader\nexplorations via high-level retrieval to improve answer diversity. Together, these approaches capture a\ncomprehensive global perspective of the knowledge domain, contributing to better RAG performance.\n4.5 M ODEL COST AND ADAPTABILITY ANALYSIS (RQ4)\nFigure 2: Comparison of Cost in Terms of To-\nkens and API Calls for GraphRAG and Ligh-\ntRAG on the Legal Dataset.\nPhase Retrieval Phase Incremental Text Update\nModel GraphRAG Ours GraphRAG Ours\nTokens 610 × 1,000 < 100 1,399 × 2 × 5,000 Textract+Textract\nAPI 610×1,000\nCmax 1 1,399 × 2 +Cextract CextractCalls\nWe compare the cost of our LightRAG with that of the\ntop-performing baseline, GraphRAG, from two key\nperspectives. First, we examine the number of tokens\nand API calls during the indexing and retrieval pro-\ncesses. Second, we analyze these metrics in relation\nto handling data changes in dynamic environments.\nThe results of this evaluation on the legal dataset are\npresented in Table 2. In this context, Textract repre-\nsents the token overhead for entity and relationship extraction, Cmax denotes the maximum number\nof tokens allowed per API call, and Cextract indicates the number of API calls required for extraction.\nIn the retrieval phase, GraphRAG generates 1,399 communities, with 610 level-2 communities\nactively utilized for retrieval in this experiment. Each community report averages 1,000 tokens,\nresulting in a total token consumption of 610,000 tokens (610 communities × 1,000 tokens per\ncommunity). Additionally, GraphRAG’s requirement to traverse each community individually leads\nto hundreds of API calls, significantly increasing retrieval overhead. In contrast, LightRAG optimizes\nthis process by using fewer than 100 tokens for keyword generation and retrieval, requiring only a\nsingle API call for the entire process. This efficiency is achieved through our retrieval mechanism,\n9\nwhich seamlessly integrates graph structures and vectorized representations for information retrieval,\nthereby eliminating the need to process large volumes of information upfront.\nIn the incremental data update phase, designed to address changes in dynamic real-world scenarios,\nboth models exhibit similar overhead for entity and relationship extraction. However, GraphRAG\nshows significant inefficiency in managing newly added data. When a new dataset of the same\nsize as the legal dataset is introduced, GraphRAG must dismantle its existing community structure\nto incorporate new entities and relationships, followed by complete regeneration. This process\nincurs a substantial token cost of approximately 5,000 tokens per community report. Given 1,399\ncommunities, GraphRAG would require around 1,399 × 2 × 5,000 tokens to reconstruct both the\noriginal and new community reports—an exorbitant expense that underscores its inefficiency. In\ncontrast, LightRAG seamlessly integrates newly extracted entities and relationships into the existing\ngraph without the need for full reconstruction. This approach results in significantly lower overhead\nduring incremental updates, demonstrating its superior efficiency and cost-effectiveness.\n5 R ELATED WORK\n5.1 R ETRIEVAL -AUGMENTED GENERATION WITH LLM S\nRetrieval-Augmented Generation (RAG) systems enhance LLM inputs by retrieving relevant infor-\nmation from external sources, grounding responses in factual, domain-specific knowledge Ram et al.\n(2023); Fan et al. (2024). Current RAG approaches Gao et al. (2022; 2023); Chan et al. (2024); Yu\net al. (2024) typically embed queries in a vector space to find the nearest context vectors. However,\nmany of these methods rely on fragmented text chunks and only retrieve the top-k contexts, limiting\ntheir ability to capture comprehensive global information needed for effective responses.\nAlthough recent studies Edge et al. (2024) have explored using graph structures for knowledge\nrepresentation, two key limitations persist. First, these approaches often lack the capability for\ndynamic updates and expansions of the knowledge graph, making it difficult to",
    "chunk_order_index": 8,
    "full_doc_id": "doc-45052d5e5c880b8ad46be8afde8266c9"
  },
  "chunk-86bccbbe0cccdf77d049219c4c7e5e6a": {
    "tokens": 1200,
    "content": "(2024) typically embed queries in a vector space to find the nearest context vectors. However,\nmany of these methods rely on fragmented text chunks and only retrieve the top-k contexts, limiting\ntheir ability to capture comprehensive global information needed for effective responses.\nAlthough recent studies Edge et al. (2024) have explored using graph structures for knowledge\nrepresentation, two key limitations persist. First, these approaches often lack the capability for\ndynamic updates and expansions of the knowledge graph, making it difficult to incorporate new\ninformation effectively. In contrast, our proposed model, LightRAG, addresses these challenges\nby enabling the RAG system to quickly adapt to new information, ensuring the model’s timeliness\nand accuracy. Additionally, existing methods often rely on brute-force searches for each generated\ncommunity, which are inefficient for large-scale queries. Our LightRAG framework overcomes this\nlimitation by facilitating rapid retrieval of relevant information from the graph through our proposed\ndual-level retrieval paradigm, significantly enhancing both retrieval efficiency and response speed.\n5.2 L ARGE LANGUAGE MODEL FOR GRAPHS\nGraphs are a powerful framework for representing complex relationships and find applications\nin numerous fields. As Large Language Models (LLMs) continue to evolve, researchers have\nincreasingly focused on enhancing their capability to interpret graph-structured data. This body of\nwork can be divided into three primary categories: i) GNNs as Prefix where Graph Neural Networks\n(GNNs) are utilized as the initial processing layer for graph data, generating structure-aware tokens\nthat LLMs can use during inference. Notable examples include GraphGPT Tang et al. (2024) and\nLLaGA Chen et al. (2024). ii) LLMs as Prefix involves LLMs processing graph data enriched with\ntextual information to produce node embeddings or labels, ultimately refining the training process\nfor GNNs, as demonstrated in systems like GALM Xie et al. (2023) and OFA Liu et al. (2024). iii)\nLLMs-Graphs Integration focuses on achieving a seamless interaction between LLMs and graph\ndata, employing techniques such as fusion training and GNN alignment, and developing LLM-based\nagents capable of engaging with graph information directly Li et al. (2023); Brannon et al. (2023).\n6 C ONCLUSION\nThis work introduces an advancement in Retrieval-Augmented Generation (RAG) through the\nintegration of a graph-based indexing approach that enhances both efficiency and comprehension\nin information retrieval. LightRAG utilizes a comprehensive knowledge graph to facilitate rapid\nand relevant document retrieval, enabling a deeper understanding of complex queries. Its dual-level\nretrieval paradigm allows for the extraction of both specific and abstract information, catering to\ndiverse user needs. Furthermore, LightRAG’s seamless incremental update capability ensures that\nthe system remains current and responsive to new information, thereby maintaining its effectiveness\nover time. Overall, LightRAG excels in both efficiency and effectiveness, significantly improving the\nspeed and quality of information retrieval and generation while reducing costs for LLM inference.\n10\nREFERENCES\nWilliam Brannon, Suyash Fulay, Hang Jiang, Wonjune Kang, Brandon Roy, Jad Kabbara, and Deb\nRoy. Congrat: Self-supervised contrastive pretraining for joint graph and text embeddings. arXiv\npreprint arXiv:2305.14321, 2023.\nChi-Min Chan, Chunpu Xu, Ruibin Yuan, Hongyin Luo, Wei Xue, Yike Guo, and Jie Fu. Rq-rag:\nLearning to refine queries for retrieval augmented generation. arXiv preprint arXiv:2404.00610,\n2024.\nRunjin Chen, Tong Zhao, AJAY KUMAR JAISW AL, Neil Shah, and Zhangyang Wang. Llaga: Large\nlanguage and graph assistant. In International Conference on Machine Learning (ICML), 2024.\nDarren Edge, Ha Trinh, Newman Cheng, Joshua Bradley, Alex Chao, Apurva Mody, Steven Truitt,\nand Jonathan Larson. From local to global: A graph rag approach to query-focused summarization.\narXiv preprint arXiv:2404.16130, 2024.\nShahul Es, Jithin James, Luis Espinosa Anke, and Steven Schockaert. Ragas: Automated evaluation\nof retrieval augmented generation. In International Conference of the European Chapter of the\nAssociation for Computational Linguistics (EACL), pp. 150–158, 2024.\nWenqi Fan, Yujuan Ding, Liangbo Ning, Shijie Wang, Hengyun Li, Dawei Yin, Tat-Seng Chua, and\nQing Li. A survey on rag meeting llms: Towards retrieval-augmented large language models. In\nInternational Conference on Knowledge Discovery and Data Mining (KDD), pp. 6491–6501, 2024.\nLuyu Gao, Xueguang Ma, Jimmy Lin, and Jamie Callan. Precise zero-shot dense retrieval without\nrelevance labels. arXiv preprint arXiv:2212.10496, 2022.\nYunfan Gao, Yun Xiong, Xinyu Gao, Kangxiang Jia, Jinliu Pan, Yuxi Bi, Yi Dai, Jiawei Sun, and\nHaofen Wang. Retrieval-augmented generation for large language models: A survey. arXiv\npreprint arXiv:2312.10997, 2023.\nYichuan Li, Kaize Ding, and Kyumin Lee. Grenade: Graph-centric language model for self-\nsupervised representation learning on text-attributed graphs. In International Conference on\nEmpirical Methods in Natural Language Processing (EMNLP",
    "chunk_order_index": 9,
    "full_doc_id": "doc-45052d5e5c880b8ad46be8afde8266c9"
  },
  "chunk-c9b168cc278b7236096162736b592f49": {
    "tokens": 1200,
    "content": "uxi Bi, Yi Dai, Jiawei Sun, and\nHaofen Wang. Retrieval-augmented generation for large language models: A survey. arXiv\npreprint arXiv:2312.10997, 2023.\nYichuan Li, Kaize Ding, and Kyumin Lee. Grenade: Graph-centric language model for self-\nsupervised representation learning on text-attributed graphs. In International Conference on\nEmpirical Methods in Natural Language Processing (EMNLP), pp. 2745–2757, 2023.\nHao Liu, Jiarui Feng, Lecheng Kong, Ningyue Liang, Dacheng Tao, Yixin Chen, and Muhan Zhang.\nOne for all: Towards training one graph model for all classification tasks. In International\nConference on Learning Representations (ICLR), 2024.\nYuanjie Lyu, Zhiyu Li, Simin Niu, Feiyu Xiong, Bo Tang, Wenjin Wang, Hao Wu, Huanyong\nLiu, Tong Xu, and Enhong Chen. Crud-rag: A comprehensive chinese benchmark for retrieval-\naugmented generation of large language models. arXiv preprint arXiv:2401.17043, 2024.\nHongjin Qian, Peitian Zhang, Zheng Liu, Kelong Mao, and Zhicheng Dou. Memorag: Moving\ntowards next-gen rag via memory-inspired knowledge discovery, 2024. URL https://arxiv.\norg/abs/2409.05591.\nOri Ram, Yoav Levine, Itay Dalmedigos, Dor Muhlgay, Amnon Shashua, Kevin Leyton-Brown, and\nYoav Shoham. In-context retrieval-augmented language models. Transactions of the Association\nfor Computational Linguistics (TACL), 11:1316–1331, 2023.\nLadislav Rampášek, Michael Galkin, Vijay Prakash Dwivedi, Anh Tuan Luu, Guy Wolf, and Do-\nminique Beaini. Recipe for a general, powerful, scalable graph transformer. International\nConference on Neural Information Processing Systems (NeurIPS), 35:14501–14515, 2022.\nAlireza Salemi and Hamed Zamani. Evaluating retrieval quality in retrieval-augmented generation.\nIn ACM International Conference on Research and Development in Information Retrieval (SIGIR),\npp. 2395–2400, 2024.\nViju Sudhi, Sinchana Ramakanth Bhat, Max Rudat, and Roman Teucher. Rag-ex: A generic\nframework for explaining retrieval augmented generation. In ACM International Conference on\nResearch and Development in Information Retrieval (SIGIR), pp. 2776–2780, 2024.\n11\nJiabin Tang, Yuhao Yang, Wei Wei, Lei Shi, Lixin Su, Suqi Cheng, Dawei Yin, and Chao Huang.\nGraphgpt: Graph instruction tuning for large language models. In ACM International Conference\non Research and Development in Information Retrieval (SIGIR), pp. 491–500, 2024.\nShangqing Tu, Yuanchun Wang, Jifan Yu, Yuyang Xie, Yaran Shi, Xiaozhi Wang, Jing Zhang, Lei\nHou, and Juanzi Li. R-eval: A unified toolkit for evaluating domain knowledge of retrieval\naugmented large language models. In International Conference on Knowledge Discovery and Data\nMining (KDD), pp. 5813–5824, 2024.\nHan Xie, Da Zheng, Jun Ma, Houyu Zhang, Vassilis N Ioannidis, Xiang Song, Qing Ping, Sheng\nWang, Carl Yang, Yi Xu, et al. Graph-aware language model pre-training on a large graph corpus\ncan help multiple graph applications. In International Conference on Knowledge Discovery and\nData Mining (KDD), pp. 5270–5281, 2023.\nYue Yu, Wei Ping, Zihan Liu, Boxin Wang, Jiaxuan You, Chao Zhang, Mohammad Shoeybi, and\nBryan Catanzaro. Rankrag: Unifying context ranking with retrieval-augmented generation in llms.\narXiv preprint arXiv:2407.02485, 2024.\nPenghao Zhao, Hailin Zhang, Qinhan Yu, Zhengren Wang, Yunteng Geng, Fangcheng Fu, Ling Yang,\nWentao Zhang, and Bin Cui. Retrieval-augmented generation for ai-generated content: A survey.\narXiv preprint arXiv:2402.19473, 2024.\n12\n7 A PPENDIX\nIn this section, we elaborate on the methodologies and experimental settings used in the LightRAG\nframework. It describes the specific steps for extracting entities and relationships from documents,\ndetailing how large language models (LLMs) are utilized for this purpose. The section also specifies\nthe prompt templates and configurations used in LLM operations, ensuring clarity in the experimental\nsetup. Additionally, it outlines the evaluation criteria and dimensions used to assess the performance\nof LightRAG against baselines from various dimensions.\n7.1 E XPERIMENTAL DATA DETAILS\nTable 4: Statistical information of the datasets.\nStatistics Agriculture CS Legal Mix\nTotal Documents 12 10 94 61\nTotal Tokens 2,017,886 2,306,535 5,081,069 619,009\nTable 4 presents statistical information for four datasets: Agriculture, CS, Legal, and Mix. The\nAgriculture dataset consists of 12 documents totaling 2,017,886 tokens, while the CS dataset contains\n10 documents with 2,306,535 tokens. The Legal dataset is the largest",
    "chunk_order_index": 10,
    "full_doc_id": "doc-45052d5e5c880b8ad46be8afde8266c9"
  },
  "chunk-a0819113d1bd5861ea3ba0a48542183f": {
    "tokens": 1200,
    "content": "Legal Mix\nTotal Documents 12 10 94 61\nTotal Tokens 2,017,886 2,306,535 5,081,069 619,009\nTable 4 presents statistical information for four datasets: Agriculture, CS, Legal, and Mix. The\nAgriculture dataset consists of 12 documents totaling 2,017,886 tokens, while the CS dataset contains\n10 documents with 2,306,535 tokens. The Legal dataset is the largest, comprising 94 documents and\n5,081,069 tokens. Lastly, the Mix dataset includes 61 documents with a total of 619,009 tokens.\n7.2 C ASE EXAMPLE OF RETRIEVAL -AUGMENTED GENERATION IN LIGHT RAG.\nFigure 3: A retrieval and generation example.\nIn Figure 3, we illustrate the retrieve-and-generate process. When presented with the query, “What\nmetrics are most informative for evaluating movie recommendation systems?”, the LLM first extracts\nboth low-level and high-level keywords. These keywords guide the dual-level retrieval process on the\n13\ngenerated knowledge graph, targeting relevant entities and relationships. The retrieved information\nis organized into three components: entities, relationships, and corresponding text chunks. This\nstructured data is then fed into the LLM, enabling it to generate a comprehensive answer to the query.\n7.3 O VERVIEW OF THE PROMPTS USED IN LIGHT RAG\n7.3.1 P ROMPTS FOR GRAPH GENERATION\nFigure 4: Prompts for Graph Generation\nThe graph construction prompt outlined in Figure 4 is designed to extract and structure entity-\nrelationship information from a text document based on specified entity types. The process begins\nby identifying entities and categorizing them into types such as organization, person, location, and\nevent. It then provides detailed descriptions of their attributes and activities. Next, the prompt\nidentifies relationships between these entities, offering explanations, assigning strength scores, and\nsummarizing the relationships using high-level keywords.\n7.3.2 P ROMPTS FOR QUERY GENERATION\nFigure 5: Prompts for Query Generation\nIn Figure 5, the query generation prompt outlines a framework for identifying potential user roles\n(e.g., data scientist, finance analyst, and product manager) and their objectives for generating queries\nbased on a specified dataset description. The prompt explains how to define five distinct users\nwho would benefit from interacting with the dataset. For each user, it specifies five key tasks they\nwould perform while working with the dataset. Additionally, for each (user, task) combination, five\nhigh-level questions are posed to ensure a thorough understanding of the dataset.\n14\n7.3.3 P ROMPTS FOR KEYWORD EXTRACTION\nFigure 6: Prompts for Keyword Extraction\nIn Figure 6, the prompt describes a method for extracting keywords from a user’s query, distinguishing\nbetween high-level and low-level keywords. High-level keywords represent broad concepts or\nthemes, while low-level keywords focus on specific entities and details. The extracted keywords are\nreturned in JSON format, organized into two fields: “high_level_keywords” for overarching ideas\nand “low_level_keywords” for specific details.\n7.3.4 P ROMPTS FOR RAG E VALUATION\nFigure 7: Prompts for RAG Evaluation\nThe evaluation prompt is illustrated in Figure 7. It introduces a comprehensive evaluation framework\nfor comparing two answers to the same question based on three key criteria: Comprehensiveness,\nDiversity, and Empowerment. Its purpose is to guide the LLM through the process of selecting the\nbetter answer for each criterion, followed by an overall assessment. For each of the three criteria, the\n15\nTable 5: Case Study: Comparison Between LightRAG and the Baseline NaiveRAG.\nQuery How do indigenous perspectives on ownership and collaboration influence corporate mergers in countries\nlike Canada and Australia?\nNaiveRAG Indigenous perspectives on ownership and collaboration play a significant role in shaping corporate mergers\nin countries like Canada and Australia, particularly where resources and land rights intersect with Indige-\nnous sovereignty and cultural values. These perspectives emphasize community engagement, respect for\ntraditional land use, and a collaborative approach to resource management, influencing corporate strategies\nand outcomes.\n. . .\nBoth nations illustrate that prioritizing Indigenous perspectives leads to more sustainable and equitable\noutcomes. Acknowledging Indigenous rights and fostering collaborative relationships can reduce conflicts\nand enhance corporate reputations. Ultimately, integrating Indigenous perspectives is a pathway to better\nbusiness practices and community relations.\nLightRAG Indigenous Perspectives on Ownership and Collaboration in Corporate Mergers\nIndigenous perspectives significantly influence corporate mergers in countries like Canada and Australia.\nThese views emphasize communal rights to land and resources, spiritual connections to the environment, and\nthe importance of collaboration over competition.\nCultural Significance of Land Ownership[...]\nThe Role of Collaboration[...]\nLegal and Regulatory Frameworks[...]\nConclusion\nIndigenous perspectives shape corporate mergers by emphasizing communal ownership and collaborative\npartnerships. Corporations must adopt respectful, inclusive practices that honor Indigenous cultural values\nand rights, paving the way for sustainable, mutually beneficial outcomes.\nLLM DecisionComprehensiveness: \"Winner\": \"Answer 2 (LightRAG)\",\n\"Explanation\": \"Answer 2 provides a thorough exploration of the indigenous perspectives by discussing\ncultural significance, collaboration, and legal frameworks, including specific examples and detailed insights.\nIn contrast, Answer 1, while informative, lacks the same depth in analyzing the various dimensions of the\nindigenous perspectives on ownership and collaboration.\"\nDiversity: \"Winner\": \"Answer 2 (LightRAG)\",\n\"Explanation\": \"Answer 2 presents a wider array of perspectives, focusing on the communal aspect of\nland ownership, spiritual connections, and practical examples of collaboration. It covers more ground by\ncontr",
    "chunk_order_index": 11,
    "full_doc_id": "doc-45052d5e5c880b8ad46be8afde8266c9"
  },
  "chunk-0c7c163214ba79d9ee58bf5111bfa033": {
    "tokens": 552,
    "content": "significance, collaboration, and legal frameworks, including specific examples and detailed insights.\nIn contrast, Answer 1, while informative, lacks the same depth in analyzing the various dimensions of the\nindigenous perspectives on ownership and collaboration.\"\nDiversity: \"Winner\": \"Answer 2 (LightRAG)\",\n\"Explanation\": \"Answer 2 presents a wider array of perspectives, focusing on the communal aspect of\nland ownership, spiritual connections, and practical examples of collaboration. It covers more ground by\ncontrasting Indigenous views with Western notions, whereas Answer 1 primarily focuses on corporate\nstrategies and outcomes with limited perspective.\"\nEmpowerment: \"Winner\": \"Answer 2 (LightRAG)\",\n\"Explanation\": \"Answer 2 equips the reader with nuanced understanding and actionable insights by\nhighlighting the importance of collaboration and the legal frameworks involved. It empowers corporations\nby illustrating how adopting an inclusive approach can facilitate better outcomes. Answer 1, while practical,\ndoes not emphasize the moral or ethical implications as strongly.\"\nOverall Winner: \"Winner\": \"Answer 2 (LightRAG)\",\n\"Explanation\": \"Answer 2 excels overall due to its comprehensive exploration, diversity of perspectives,\nand empowerment of the reader with actionable insights about indigenous perspectives and collaboration\nin corporate mergers. Although Answer 1 is more direct, the depth and breadth of Answer 2 make it the\nstronger response.\"\nLLM must identify which answer performs better and provide a rationale for its choice. Ultimately,\nan overall winner is determined based on performance across all three dimensions, accompanied by a\ndetailed summary that justifies the decision. The evaluation is structured in JSON format, ensuring\nclarity and consistency, and facilitating a systematic comparison between the two answers.\n7.4 C ASE STUDY: C OMPARISON BETWEEN LIGHT RAG AND THE BASELINE NAIVE RAG.\nTo further illustrate LightRAG’s superiority over baseline models in terms of comprehensiveness,\nempowerment, and diversity, we present a case study comparing LightRAG and NaiveRAG in\nTable 5. This study addresses a question regarding indigenous perspectives in the context of corporate\nmergers. Notably, LightRAG offers a more in-depth exploration of key themes related to indigenous\nperspectives, such as cultural significance, collaboration, and legal frameworks, supported by specific\nand illustrative examples. In contrast, while NaiveRAG provides informative responses, it lacks\nthe depth needed to thoroughly examine the various dimensions of indigenous ownership and\ncollaboration. The dual-level retrieval process employed by LightRAG enables a more comprehensive\ninvestigation of specific entities and their interrelationships, facilitating extensive searches that\neffectively capture overarching themes and complexities within the topic.\n16",
    "chunk_order_index": 12,
    "full_doc_id": "doc-45052d5e5c880b8ad46be8afde8266c9"
  }
}